[
  {
    "sha": "4ab7fda5efd5a33843782a9526e1b117034fc28a",
    "filename": "modules/ROOT/pages/layouts.adoc",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2FROOT%2Fpages%2Flayouts.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2FROOT%2Fpages%2Flayouts.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2FROOT%2Fpages%2Flayouts.adoc?ref=8f0c85b397a32ee6d16649e2fd211e6538706678",
    "patch": "@@ -1,32 +0,0 @@\n-= Layouts\n-:description: This page explains how to handle layouts in Bonita Applications, and how to use it in an application.\n-\n-{description}\n-\n-A layout is a page used to define the main frame of an application.\n-\n-It defines menu positioning, a footer, or any common content that could be displayed on every page of the application.\n-Each application can have its own layout.\n-\n-There is an example of layout in Bonita Applications, the \"Bonita Layout\".\n-\n-Layouts are xref:ROOT:resource-management.adoc[added, exported, edited, and deleted] as resources in Bonita Applications.\n-\n-== Use in applications\n-\n-It is linked to an application thanks to the application descriptor in Bonita Studio. +\n-A layout can only be use as the main container of an application. It cannot be used as a simple application page.\n-\n-In a Non-Production or Production environment, a layout is imported as a .zip archive containing a page.properties file and a resources folder.\n-\n-== Live update\n-\n-xref:runtime:live-update.adoc[Live update] allows the Administrator to update one element of the application in a situation of emergency.\n-\n-=== Edit the layout\n-\n-You can xref:ROOT:resource-management.adoc#modify[edit the content of a layout] by installing a new version.\n-\n-=== Modify the pages in an application\n-\n-You can xref:runtime:applications.adoc#define-navigation[link another layout to an application] in the application descriptor."
  },
  {
    "sha": "a6169982f413b50fbd76c0612b27f899b2e9c1ec",
    "filename": "modules/ROOT/pages/release-notes.adoc",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2FROOT%2Fpages%2Frelease-notes.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2FROOT%2Fpages%2Frelease-notes.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2FROOT%2Fpages%2Frelease-notes.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -22,6 +22,7 @@ The new values are available for Bonita Subscription Editions starting with the\n   * Since the pages have been created by using Bonita UI Designer, developers can:\n         \n         ** Use the custom widget embedded in the new pages in their own application pages. The widget has been wrapped into a fragment that makes it very easy to use.\n+\n         ** Modify the process or case visualization page, and use it in any Bonita application\n \n For more details, check xref:pages-and-forms:customize-display-process-monitoring.adoc[How to page to customize the display of process execution monitoring]\n@@ -32,7 +33,6 @@ Here it comes, Bonita Reporting Application is now available for download on Bon\n \n A subscription account is required for downloading the .jar , that contains “Process Historical Data” and “Human tasks historical data” reports, designed for process performance and human tasks execution analysis. More details are available in the dedicated documentation page xref:runtime:reporting-app.adoc[Bonita application for analytics and reporting].\n \n-\n == Improvements\n \n === Development suite changes\n@@ -57,6 +57,7 @@ With the previous version, if the actor mapping of a process was not defined, an\n \n ==== New Menus for Bonita Studio\n \n+\n The menus have been reviewed for an easier user journey.\n \n ==== Added Environment duplication feature"
  },
  {
    "sha": "6c565917ee0478af23d2b3e2c9a1ecf02cb47a9d",
    "filename": "modules/applications/pages/customize-layouts.adoc",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fapplications%2Fpages%2Fcustomize-layouts.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fapplications%2Fpages%2Fcustomize-layouts.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fapplications%2Fpages%2Fcustomize-layouts.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -9,7 +9,7 @@ For Enterprise, Performance, Efficiency, and Teamwork editions only.\n \n == Overview\n \n-As explained in the xref:ROOT:layouts.adoc[layouts] documentation page, it is possible to customize the existing application layout using the UI Designer.\n+As explained in the xref:pages-and-forms:layouts.adoc[layouts] documentation page, it is possible to customize the existing application layout using the UI Designer.\n Keep in mind that any layout is composed by tree containers: layout-header, layout-content, layout-footer. But only layout-header and layout-footer are designed to support additional widgets.\n \n Prerequisites to customize a layout:"
  },
  {
    "sha": "bd080e577945a6e90e38d35bf3038a89f0294066",
    "filename": "modules/applications/pages/layout-development.adoc",
    "status": "modified",
    "additions": 42,
    "deletions": 26,
    "changes": 68,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fapplications%2Fpages%2Flayout-development.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fapplications%2Fpages%2Flayout-development.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fapplications%2Fpages%2Flayout-development.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -1,39 +1,55 @@\n = Develop a layout\n-:page-aliases: ROOT:layout-development.adoc\n-:description: This pages describe how to create a layout and use it in an application.\n+:description: This page explains how to handle layouts in Bonita Applications, and how to use it in an application.\n \n {description}\n \n-== Definition\n+Layouts are xref:ROOT:resource-management.adoc[added, exported, edited, and deleted] as resources in Bonita Applications.\n \n-A layout is structure of the application and page content. It defines menu positioning, a footer, or any common content that could be displayed on every page of the application.\n-Each application can have its own layout, or the same layout can be used consistently to all applications.\n+== Use in applications\n \n-There is an example of layout in Bonita Applications, \"Bonita Layout\", that can be found in the Bonita Administrator Application, \"Resources\" page. +\n-It is made of three containers:\n+It is linked to an application thanks to the application descriptor in Bonita Studio. +\n+A layout can only be use as the main container of an application. It cannot be used as a simple application page.\n \n-* layout-header +\n-          Comes with the links to the user modal and the applications modal, and the living application menu widget to display the navigation of your application.\n-* layout-content +\n-          Comes with the living application iframe widget to display pages or forms of your application.\n-* layout-footer +\n-          Empty by default\n-* User modal\n-          Current logged in user information, language selection and sign out link\n-* Application List modal\n-          List of application links for the current logged in user\n-The layout was created using Bonita UI Designer, so you can export it and customize it with Bonita UI designer.\n-You can add more widgets in the containers layout-header and layout-footer.\n-The 'layout.css' file manages the layout behavior, allows to display the content container in full height,\n-and header and footer with fixed size. +\n-But it does not allow to add other widgets than the living application iframe into layout-content.\n+In a Non-Production or Production environment, a layout is imported as a .zip archive containing a page.properties file and a resources folder.\n \n-For example, you could:\n+== Live update\n \n-* Add elements in the layout-header, on top of the menu, like a login box or brand image\n-* Add somme content in the layout-footer\n+xref:runtime:live-update.adoc[Live update] allows the Administrator to update one element of the application in a situation of emergency.\n \n-== Usage\n+=== Edit the layout\n+\n+You can xref:ROOT:resource-management.adoc#modify[edit the content of a layout] by installing a new version.\n+\n+=== Modify the pages in an application\n+\n+You can xref:runtime:applications.adoc#define-navigation[link another layout to an application] in the application descriptor.\n+\n+== Create a layout\n+\n+=== From the provided Bonita layout\n+==== If you have not installed any Bonita application in your project in Bonita Studio\n+\n+. From Bonita Studio, click on the *_Applications_* icon and select either the Administrator or Super Administrator application\n+. Go to the *_Resources_* menu option\n+. If needed, filter the type by _Layout_, and select *_Bonita Layout_*\n+. Click on the *_Export_* button\n+. From Bonita Studio, click on the *_UI Designer_* icon to open the UI Designer\n+. Click on the *_Import_* button\n+. Find the Bonita layout you have exported and load it\n+. Edit it and save it with another name\n+\n+==== If you have installed a Bonita application\n+\n+. In Bonita Studio, go to the _Project Explorer_\n+. Open the project, and the _Pages/Forms/Layouts_ section\n+. Double click on _Bonita layout_. This automatically opens the UI Designer with the layout ready to edit.\n+. Edit it and save it with another name\n+\n+=== From scratch\n+\n+Use the same sequence of steps than to create a page from scratch.\n+\n+== Deployment\n \n A layout is deployed in a Bonita Runtime as a .zip archive containing a page.properties file and a resources folder.\n "
  },
  {
    "sha": "e10827ad296915a523bb8d175aa48e087dfc1719",
    "filename": "modules/best-practices/pages/design-methodology.adoc",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fbest-practices%2Fpages%2Fdesign-methodology.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fbest-practices%2Fpages%2Fdesign-methodology.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fbest-practices%2Fpages%2Fdesign-methodology.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -124,7 +124,7 @@ In Bonita Studio, in the pools _Execution_ properties (instantiation form and ca\n \n Besides the forms, and following the findings of the UI workshops, application pages may be needed to display generic information about business data. They can also replace a form when all the user needs to do is clicking on a _Approve_ or _Reject_ button.+\n If the project is a Case Management project, you can customize the provided project. +\n-The create-or-modify-a-page.adoc [creation of pages] is done directly in the UI Designer embedded in Bonita Studio. +\n+The creation of xref:ROOT:pages-and-forms.adoc [pages anf forms] is done directly in the UI Designer embedded in Bonita Studio. +\n \n From the UI Designer, you can also define the xref:applications:layout-development.adoc[_layout_] of the application, although Bonita provides an efficient xref:applications:bonita-layout.adoc[default Layout]. +\n A xref:applications:customize-living-application-theme.adoc[_theme_] can also be defined to match the graphical design charter of the company. This can be done my customizing one of Bonita's provided themes. +\n@@ -170,7 +170,7 @@ Similarly, the Adaptive Case Management example, which can only be used after it\n However, our team of Professional Services consultants can assist you in the customization phase (Subscription editions only). You can contact them through the Customer Services Center.\n ====\n \n-To know about the pages that can be customized, go to the xref:ROOT:create-or-modify-a-page.adoc#[create a page] documentation page.\n+To know about the pages that can be customized, go to the xref:ROOT:pages-and-forms.adoc [pages anf forms] documentation page.\n \n === Connectors - final implementation\n To use a connector, it must first be declared as a dependency of the project. This is done from the Studio xref:bonita-overview:managing-extension-studio.adoc[_Extensions_] page. The connector can be found in Bonita Marketplace or can be xref:software-extensibility:software-extensibility.adoc[made available] the professional developers of the project team. +"
  },
  {
    "sha": "4f0fb24288742eeb22056c6bb93ac1dd5ecb2c01",
    "filename": "modules/bonita-overview/pages/project-structure.adoc",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fbonita-overview%2Fpages%2Fproject-structure.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fbonita-overview%2Fpages%2Fproject-structure.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fbonita-overview%2Fpages%2Fproject-structure.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -84,19 +84,19 @@ However, it is not required to use all the concepts to create a valid Bonita Aut\n |Studio/Admin Application\n |xml editor\n \n-|xref:ROOT:pages.adoc[Application pages]\n+|xref:pages-and-forms:pages.adoc[Application pages]\n |Web pages used within your applications\n |Create\n |UI Designer\n |Front-end framework\n \n-|xref:ROOT:layouts.adoc[Layout]\n+|xref:applications:layout-development.adoc[Layout]\n |Used to define the main frame of an application.\n |Provided\n |UI Designer\n |Front-end framework\n \n-|xref:ROOT:themes.adoc[Theme]\n+|xref:applications:themes.adoc[Theme]\n |Defines the look and feel of your application\n |A default theme is provided and you can create custom theme\n |Studio or xref:applications:customize-living-application-theme.adoc[Dedicated SDK] (custom theme)"
  },
  {
    "sha": "837f6ce691dfec77baa831c272491b5a71e8804b",
    "filename": "modules/bonita-overview/pages/ui-designer-overview.adoc",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fbonita-overview%2Fpages%2Fui-designer-overview.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fbonita-overview%2Fpages%2Fui-designer-overview.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fbonita-overview%2Fpages%2Fui-designer-overview.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -12,7 +12,7 @@ A page is defined in HTML extended by the AngularJS JavaScript framework. Use th\n \n * Create pages directly in the Bonita UI designer.\n * Start form design in Bonita Studio from the appropriate xref:data:contracts-and-contexts.adoc[contract].\n-* Create xref:ROOT:layouts.adoc[layouts] by duplicating the Bonita Layout available in the Bonita Administrator Application, \"Resources\" tab and then updating it.\n+* Create xref:pages-and-forms:layouts.adoc[layouts] by duplicating the Bonita Layout available in the Bonita Administrator Application, \"Resources\" tab and then updating it.\n \n You can import an existing page, form, or layout to edit, or duplicate existing ones.\n "
  },
  {
    "sha": "aaa7555c799c965a793566be43d1b1882f603978",
    "filename": "modules/getting-started/pages/create-application.adoc",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fgetting-started%2Fpages%2Fcreate-application.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fgetting-started%2Fpages%2Fcreate-application.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fgetting-started%2Fpages%2Fcreate-application.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -39,7 +39,7 @@ image:images/getting-started-tutorial/create-application/create-application.gif[\n [NOTE]\n ====\n \n-The look & feel can be fully customized by modifying the xref:ROOT:layouts.adoc[layout] and adding a custom xref:applications:customize-living-application-theme.adoc[theme].\n+The look & feel can be fully customized by modifying the xref:applications:layout-development.adoc[application layout] and adding a custom xref:applications:customize-living-application-theme.adoc[theme].\n ====\n \n The application is ready to be deployed in Bonita Applications. Now you need to deploy it in Bonita Applications:"
  },
  {
    "sha": "c5ea2441ef433b31260f932cdc0ce232827d3dce",
    "filename": "modules/pages-and-forms/pages-and-forms-nav.adoc",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages-and-forms-nav.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages-and-forms-nav.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages-and-forms-nav.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -1,9 +1,7 @@\n  * xref:pages-and-forms.adoc[Pages and forms]\n- ** xref:create-or-modify-a-page.adoc[Create or modify UI elements]\n  ** xref:forms.adoc[Forms overview]\n- ** xref:forms-development.adoc[Forms development]\n  ** xref:pages.adoc[Pages overview]\n- ** xref:pages-development.adoc[Pages development]\n+ ** xref:layouts.adoc[Layouts overview]\n  ** xref:variables.adoc[Variables in the UI Designer]\n  ** xref:widgets.adoc[Widgets]\n  ** xref:widget-properties.adoc[Widget properties]"
  },
  {
    "sha": "7fed8cd9038183cdec28b620825228eececddb3c",
    "filename": "modules/pages-and-forms/pages/create-or-modify-a-page.adoc",
    "status": "removed",
    "additions": 0,
    "deletions": 173,
    "changes": 173,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2Fpages-and-forms%2Fpages%2Fcreate-or-modify-a-page.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2Fpages-and-forms%2Fpages%2Fcreate-or-modify-a-page.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Fcreate-or-modify-a-page.adoc?ref=8f0c85b397a32ee6d16649e2fd211e6538706678",
    "patch": "@@ -1,173 +0,0 @@\n-= Create or modify UI elements\n-:page-aliases: ROOT:create-or-modify-a-page.adoc\n-:description: Guidance to create and modify User Interfaces elements with Bonita UI Designer.\n-\n-{description}\n-\n-== User Interfaces development overview\n-\n-Your automation project can use xref:ROOT:pages.adoc[pages] to display information and provide interaction controls to the end-users or administrators. +\n-It most of the times uses xref:forms.adoc[forms] to display and collect new or edited information. +\n-Forms and pages are made of containers and widgets. +\n-Some containers and widgets can be grouped in xref:ROOT:fragments.adoc[fragments], in order to be reused in several pages or forms. +\n-\n-The overall graphical structure of the application is handled by the xref:applications:layout-development.adoc[layout]. +\n-The look and feel of the application, layout, forms, and pages is handled by the xref:ROOT:themes.adoc[theme].\n-\n-Forms are embedded in the processes, whereas pages, layouts, and themes are referred to in the application descriptor. +\n-\n-Bonita provides a default theme, available in Bonita Studio and Bonita Runtime. +\n-Developers can xref:applications:customize-living-application-theme.adoc[create a custom theme] using their favorite development environment, and then add it as an xref:software-extensibility:software-extensibility.adoc[extension] in the project. +\n-\n-Bonita UI Designer comes with a set of xref:ROOT:widgets.adoc[provided containers and widgets]. +\n-xref:custom-widgets.adoc[Custom widgets] can also be created to make the palette richer. +\n-Those are developped by professional developers, from scratch or from an https://community.bonitasoft.com/project[existing project] of the Community. +\n-\n-The following chapters give more information on how to develop all the others elements in the UI Designer.\n-\n-== Create a form\n-\n-In a Bonita project architecture, xref:forms.adoc[forms] are embedded in the pools. Their creation is very linked to the process step they \"feed\", in a way. +\n-It is recommended to define the xref:data:contracts-and-contexts.adoc[contract] in its _Execution / Contract_ property tab before to create the form, so the Studio will generate a form according to the contract. +\n-Forms can be created at different level:\n-\n-* An instantiation form is created from the pool _Execution / Instantiation form_ tab\n-* A task form is created from the human task _Execution / form_ tab\n-\n-The Case overview (this page is technically considered as a form because of its strong link to the process) is created from the pool _Execution / Overview page_ tab and does not need a contract to be created.\n-\n-. From these tabs, click on the *_Edit_* icon at the right of the _Target form_ field. This opens the UI Designer on a new form, with some widgets, containers, and variables already created to speed up the design process, using the contract inputs.\n-. Rename it\n-. Customize what needs to be displayed as well as the _Target URL on success_ of the *_Submit_* button.\n-\n-For more technical information about the forms, visit xref:ROOT:forms-development.adoc[this dedicated documentation page].\n-\n-== Create a page\n-\n-xref:ROOT:pages.adoc[Pages] are created independently from the processes. They are used to display business information that group several processes and several instances of the processes in an efficient view, a list of requests, for example. +\n-The controls they embed (buttons, links) can call BPM APIs that will trigger the display of the process instantiation form, or the execution of a task.\n-\n-=== From scratch\n-. From Bonita Studio coolbar, click on the *_UI Designer_* icon to open the UI Designer. +\n-. Click on the *_Create_* button\n-. In the pop up, choose the element to create\n-. Give it a name\n-. Click on the *_Create_* button\n-. In the page editor, drag and drop the widgets, fragments, or BDM objects to create the right user interface\n-\n-=== From an existing page\n-You can easily duplicate an exiting page just by saving it under a different name.\n-\n-. From Bonita Studio coolbar, click on the *_UI Designer_* icon to open the UI Designer. +\n-. Open the page you want to duplicate\n-. Click on the *_Save_* button and select *_Save as_*\n-. In the pop up, choose the element to create (new page or form)\n-. Give it a name\n-. Click on the *_Save_* button\n-\n-=== From a Bonita provided page\n-\n-Only Bonita pages created with the UI Designer can be customized in the UI Designer. Indeed, as Bonita applications have evolved in several phases, so did the frameworks in which their pages have been made.\n-\n-To customize a page provided by Bonita:\n-\n-. From Bonita Studio coolbar, click on the *_Applications_* icon, and open the *_Administrator Application_*\n-. Go to the *_Resources_* menu, find the page, and and check its description to make sure it is a page done with Bonita UI Designer\n-. Export the page\n-. From Bonita Studio coolbar, click on the *_UI Designer_* icon to open Bonita UI Designer\n-. Import the page in the UI Designer\n-\n-Note that by doing so, if the page embed fragments and custom widgets, they are also imported and added to the UI Designer palette.\n-\n-You can find the list of pages ready for customization in a xref:ROOT:pages.adoc#_List_of_Bonita_Applications_customizable_pages[dedicated documentation page].\n-\n-For more technical information about the pages, visit xref:ROOT:pages-development.adoc[the dedicated documentation page].\n-\n-== Create a layout\n-\n-=== From the provided Bonita layout\n-==== If you have not installed any Bonita application in your project in Bonita Studio\n-\n-. From Bonita Studio, click on the *_Applications_* icon and select either the Administrator or Super Administrator application\n-. Go to the *_Resources_* menu option\n-. If needed, filter the type by _Layout_, and select *_Bonita Layout_*\n-. Click on the *_Export_* button\n-. From Bonita Studio, click on the *_UI Designer_* icon to open the UI Designer\n-. Click on the *_Import_* button\n-. Find the Bonita layout you have exported and load it\n-. Edit it and save it with another name\n-\n-==== If you have installed a Bonita application\n-\n-. In Bonita Studio, go to the _Project Explorer_\n-. Open the project, and the _Pages/Forms/Layouts_ section\n-. Double click on _Bonita layout_. This automatically opens the UI Designer with the layout ready to edit.\n-. Edit it and save it with another name\n-\n-=== From scratch\n-\n-Use the same sequence of steps than to create a page from scratch.\n-\n-For more technical information about layouts, visit the xref:applications:layout-development.adoc[dedicated documentation page].\n-\n-== Create a fragment\n-\n-Use the same sequence of steps as to create a page.\n-An example on how to use a Bonita fragment: xref:ROOT:customize-display-process-monitoring.adoc[How to customize the display of process execution monitoring].\n-\n-\n-== Responsiveness\n-\n-You can optimize the page or form design for a given device type by configuring xref:ROOT:widget-properties.adoc[device-specific values for the Width property] for widgets. Use the a device types bar in the Page editor to choose the target device type.\n-image:images/images-6_0/pb-resolution.png[Device type selection]\n-\n-== Modify an element\n-\n-After a form, page, layout, or fragment is created, you can update it by just clicking on the *_Pencil_* icon to open it in the editor. +\n-Update the element by deleting or dragging and dropping widgets, business objects or fragments from the palette to the whiteboard. +\n-Edit widget properties in the widget properties panel, create data, and bind them to the widgets.\n-\n-== Preview an element\n-\n-You can preview page, form and fragment rendering by clicking on the *_Preview_* button. Another browser window opens with the element as it will be displayed after deployment. If you update the page, form or fragment, the preview is automatically refreshed when you save. +\n-\n-You can display your page, layout, form or fragment with one of your theme application installed. +\n-\n-From the preview window, you can also expand the preview outside of current preview mechanism, with the *Expand Preview in new window* button. This allows you to set new URL parameters, play with dynamic browser sizing, and to reuse same url in another browser to see how your form or page behaves in your user default browser. +\n-\n-You can use the a device types bar on the preview screen to choose the target device type. +\n-The preview displays the element as it would be displayed on the selected type of device. +\n-\n-[#export]\n-\n-== Export an element\n-\n-You can export a page or a layout to deploy it in Bonita Admin Application as a custom page. +\n-You can export any element to import it into another UI Designer. +\n-\n-To export an element, click the *_Export_* button image:images/images-6_0/pb-export.png[Export button] on the Page editor or the UI Designer home page. A zip file is downloaded to your computer. It contains a Bonita custom page, which is also suitable for import into another UI Designer. +\n-\n-After export you can modify your page or layout code by directly editing the code located in _resources_ folder. Be aware that such a modification to the code will work when the page or layout is deployed in the Bonita Runtime, but it may be broken if you import the page into another UI Designer.\n-\n-To import elements in another Studio, you can export pages and forms in the process `.bos` file. In the list of elements to insert in the .bos file, forms are checked by default, but not pages. When you import this `.bos` file into another Bonita Studio, forms and pages that you have checked are available in the UI Designer of that Studio.\n-\n-[#import]\n-\n-== Import an element\n-\n-To import an element from another UI Designer, go to the UI Designer home page and click the *_Import_* button image:images/images-6_0/pb-import.png[Import button]. When you import a page, layout, form or fragment, its dependencies (such as custom widgets and fragments used) are automatically be imported too. +\n-\n-[WARNING]\n-====\n-An element that has not been designed with the UI Designer cannot be imported into the UI Designer.\n-====\n-\n-== Pages and forms in .bos/.bar file\n-\n-When you generate the `.bar` file of a process, the mapped forms created with the UI Designer are embedded in the file. +\n-Application pages are not embedded as they are independant from the process. +\n-When the .bar file is deployed, forms are deployed too. +\n-\n-Applications and its elements must be deployed onto the target environment. This can be done manually from the Super Administrator or Administrator applications, in the *_Applications_* and *_Resources_* menu options. It can also be done automatically through the automation of the project builds and deployment.\n-\n-For more information on Bonita Continuous Delivery tool (Subscription editions only], visit https://documentation.bonitasoft.com/bcd/latest/[the dedicated documentation page]."
  },
  {
    "sha": "20da55f91e096d4d9a95dbc286e3a9d6ba45a68f",
    "filename": "modules/pages-and-forms/pages/forms-development.adoc",
    "status": "removed",
    "additions": 0,
    "deletions": 43,
    "changes": 43,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2Fpages-and-forms%2Fpages%2Fforms-development.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2Fpages-and-forms%2Fpages%2Fforms-development.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Fforms-development.adoc?ref=8f0c85b397a32ee6d16649e2fd211e6538706678",
    "patch": "@@ -1,43 +0,0 @@\n-= Forms development\n-:page-aliases: ROOT:forms-development.adoc\n-:description: A form is the User Interface attached to a process. It can be a process instantiation form, a human task form, or a case overview form.\n-\n-{description}\n-\n-There are some extra things to consider when creating a form compared with a page, namely how data is passed between the process instance and the form.\n-\n-== Form sources\n-\n-Starting with Bonita 7.X, you are recommended to use xref:bonita-overview:ui-designer-overview.adoc[Bonita UI Designer] to create forms for Bonita processes. +\n-Bonita UI Designer forms enable you to take full advantage of the separation between the process definition and the UI definition, by using contracts.\n-\n-You can also use external forms referenced by URL. If an external URL is being used, the information submitted to the Engine by the form must fulfill the contract.\n-You can store external forms wherever you want as long as they are accessible by URL.\n-\n-For certain cases, you can specify that there is no form. This is required for a process that is instantiated programmatically (by a call activity or by an API call from an application, for example), or for a process or a task that does not have any contract input. +\n-A human task with no form and no contract represents a manual task completed outside Bonita. The user will indicate in the application that the manual task is complete. A process or a human task with a contract but no form expects the information needed to fulfill the contract to be provided programmatically.\n-\n-[CAUTION]\n-====\n-Bonita 7.8 does not support 6.x GWT forms and case overview pages, neither for design nor at runtime.\n-To migrate your processes still using them, follow those xref:ROOT:migrate-a-form-from-6-x.adoc[instructions]\n-====\n-\n-== Form types\n-\n-A xref:data:contracts-and-contexts.adoc[context] is the set of data provided by the process instance or task instance to the form. There is no context for a process instantiation form.\n-\n-A xref:data:contracts-and-contexts.adoc[contract] is the definition of that data that the form returns to the process instance. There is no contract for an overview form.\n-\n-== Testing and debugging\n-\n-During process development, some temporary forms are generated if necessary when you run a process from Bonita Studio, for process instantiation, for human task execution, and for the case overview. These forms are generated if the \"UI Designer\" option is chosen but no form is specified in the process definition.\n-The process instantiation and step execution temporary forms are based on the relevant contract and they are a useful tool for testing and debugging your application.\n-\n-== Case overview\n-\n-The case overview contains three main sections:\n-\n-* List of business data: the content of the business variables used by the case\n-* List of documents: the content of each document used by the case\n-* Timeline: information in chronological order about all the actions that have been performed in the selected case"
  },
  {
    "sha": "1ba98db43a9cbf505a243b7c37646290753f40f4",
    "filename": "modules/pages-and-forms/pages/forms.adoc",
    "status": "modified",
    "additions": 56,
    "deletions": 1,
    "changes": 57,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Fforms.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Fforms.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Fforms.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -4,6 +4,22 @@\n \n {description}\n \n+== Create a form\n+\n+In a Bonita project architecture, xref:forms.adoc[forms] are embedded in the pools. Their creation is very linked to the process step they \"feed\", in a way. +\n+It is recommended to define the xref:data:contracts-and-contexts.adoc[contract] in its _Execution / Contract_ property tab before to create the form, so the Studio will generate a form according to the contract. +\n+Forms can be created at different level:\n+\n+* An instantiation form is created from the pool _Execution / Instantiation form_ tab\n+* A task form is created from the human task _Execution / form_ tab\n+\n+The Case overview (this page is technically considered as a form because of its strong link to the process) is created from the pool _Execution / Overview page_ tab and does not need a contract to be created.\n+\n+. From these tabs, click on the *_Edit_* icon at the right of the _Target form_ field. This opens the UI Designer on a new form, with some widgets, containers, and variables already created to speed up the design process, using the contract inputs.\n+. Rename it\n+. Customize what needs to be displayed as well as the _Target URL on success_ of the *_Submit_* button.\n+\n+\n Most of the time, they are used in only one process; in this case, they are packaged with the process and deployed in the _Processes_ section of Bonita User Application. They can be viewed in the process details section.\n Alternatively, they can be used in several processes. In this case, they can be managed as xref:ROOT:resource-management.adoc[_Resources_] in Bonita Administrator Application.\n \n@@ -37,4 +53,43 @@ xref:runtime:live-update.adoc[Live update] allows the Administrator to update on\n You can xref:runtime:live-update.adoc#form-list[update the form in the list] and xref:runtime:live-update.adoc#form-mapping[modify the mapping with the process]. +\n You can also xref:ROOT:resource-management.adoc#modify[edit] a global form as a resource in Bonita Administrator Application.\n \n-To know more about the development of forms, go to the xref:ROOT:forms-development.adoc[dedicated documentation page].\n+== Forms Development\n+\n+There are some extra things to consider when creating a form compared with a page, namely how data is passed between the process instance and the form.\n+\n+== Form sources\n+\n+Starting with Bonita 7.X, you are recommended to use xref:bonita-overview:ui-designer-overview.adoc[Bonita UI Designer] to create forms for Bonita processes. +\n+Bonita UI Designer forms enable you to take full advantage of the separation between the process definition and the UI definition, by using contracts.\n+\n+You can also use external forms referenced by URL. If an external URL is being used, the information submitted to the Engine by the form must fulfill the contract.\n+You can store external forms wherever you want as long as they are accessible by URL.\n+\n+For certain cases, you can specify that there is no form. This is required for a process that is instantiated programmatically (by a call activity or by an API call from an application, for example), or for a process or a task that does not have any contract input. +\n+A human task with no form and no contract represents a manual task completed outside Bonita. The user will indicate in the application that the manual task is complete. A process or a human task with a contract but no form expects the information needed to fulfill the contract to be provided programmatically.\n+\n+[CAUTION]\n+====\n+Bonita 7.8 does not support 6.x GWT forms and case overview pages, neither for design nor at runtime.\n+To migrate your processes still using them, follow those xref:ROOT:migrate-a-form-from-6-x.adoc[instructions]\n+====\n+\n+== Form types\n+\n+A xref:data:contracts-and-contexts.adoc[context] is the set of data provided by the process instance or task instance to the form. There is no context for a process instantiation form.\n+\n+A xref:data:contracts-and-contexts.adoc[contract] is the definition of that data that the form returns to the process instance. There is no contract for an overview form.\n+\n+== Testing and debugging\n+\n+During process development, some temporary forms are generated if necessary when you run a process from Bonita Studio, for process instantiation, for human task execution, and for the case overview. These forms are generated if the \"UI Designer\" option is chosen but no form is specified in the process definition.\n+The process instantiation and step execution temporary forms are based on the relevant contract and they are a useful tool for testing and debugging your application.\n+\n+== Case overview\n+\n+The case overview contains three main sections:\n+\n+* List of business data: the content of the business variables used by the case\n+* List of documents: the content of each document used by the case\n+* Timeline: information in chronological order about all the actions that have been performed in the selected case\n+"
  },
  {
    "sha": "08efc3968c2ff71180e787d01a9c75970c7b23ae",
    "filename": "modules/pages-and-forms/pages/fragments.adoc",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Ffragments.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Ffragments.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Ffragments.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -28,6 +28,8 @@ You can also convert a plain container used in a page, a form, a layout or a fra\n . Click the *_Save_* button.\n . The Fragment editor opens.\n \n+An example on how to use a Bonita fragment: xref:ROOT:customize-display-process-monitoring.adoc[How to customize the display of process execution monitoring].\n+\n == Update a fragment\n \n Fragments are listed in the Fragments tab of the UI Designer home page. Click the name of a fragment to open it in the Fragment editor."
  },
  {
    "sha": "f9c381cecfe7cc8863907f3b57fcfb994473dd0d",
    "filename": "modules/pages-and-forms/pages/layouts.adoc",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Flayouts.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Flayouts.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Flayouts.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -0,0 +1,34 @@\n+= Layouts\n+:description: This page explains what is a layout in UI Designer.\n+\n+{description}\n+\n+== Definition\n+\n+A layout is structure of the application and page content. It defines menu positioning, a footer, or any common content that could be displayed on every page of the application.\n+Each application can have its own layout, or the same layout can be used consistently to all applications.\n+\n+There is an example of layout in Bonita Applications, \"Bonita Layout\", that can be found in the Bonita Administrator Application, \"Resources\" page. +\n+It is made of three containers:\n+\n+* layout-header +\n+          Comes with the links to the user modal and the applications modal, and the living application menu widget to display the navigation of your application.\n+* layout-content +\n+          Comes with the living application iframe widget to display pages or forms of your application.\n+* layout-footer +\n+          Empty by default\n+* User modal\n+          Current logged in user information, language selection and sign out link\n+* Application List modal\n+          List of application links for the current logged in user\n+The layout was created using Bonita UI Designer, so you can export it and customize it with Bonita UI designer.\n+You can add more widgets in the containers layout-header and layout-footer.\n+The 'layout.css' file manages the layout behavior, allows to display the content container in full height,\n+and header and footer with fixed size. +\n+But it does not allow to add other widgets than the living application iframe into layout-content.\n+\n+For example, you could:\n+\n+* Add elements in the layout-header, on top of the menu, like a login box or brand image\n+* Add somme content in the layout-footer\n+"
  },
  {
    "sha": "2d6caa98d665df6777feeea5672bbedcfd46491b",
    "filename": "modules/pages-and-forms/pages/pages-and-forms.adoc",
    "status": "modified",
    "additions": 85,
    "deletions": 19,
    "changes": 104,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Fpages-and-forms.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Fpages-and-forms.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Fpages-and-forms.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -1,67 +1,133 @@\n-\n = Pages, forms, and all other UI elements\n :page-aliases: ROOT:pages-and-forms.adoc\n-:description: Everything you need to know to create a great user experience based on process execution.\n+:description: Guidance to create and modify User Interfaces with Bonita UI Designer around process execution.\n \n {description}\n \n+== User Interfaces development overview\n+\n+Your automation project can use xref:ROOT:pages.adoc[pages] to display information and provide interaction controls to the end-users or administrators. +\n+It most of the times uses xref:forms.adoc[forms] to display and collect new or edited information. +\n+Forms and pages are made of containers and widgets. +\n+Some containers and widgets can be grouped in xref:ROOT:fragments.adoc[fragments], in order to be reused in several pages or forms. +\n+\n+The overall graphical structure of the application is handled by the xref:applications:layout-development.adoc[layout]. +\n+The look and feel of the application, layout, forms, and pages is handled by the xref:ROOT:themes.adoc[theme].\n+\n+Forms are embedded in the processes, whereas pages, layouts, and themes are referred to in the application descriptor. +\n+\n+Bonita provides a default theme, available in Bonita Studio and Bonita Runtime. +\n+Developers can xref:applications:customize-living-application-theme.adoc[create a custom theme] using their favorite development environment, and then add it as an xref:software-extensibility:software-extensibility.adoc[extension] in the project. +\n+\n+Bonita UI Designer comes with a set of xref:ROOT:widgets.adoc[provided containers and widgets]. +\n+xref:custom-widgets.adoc[Custom widgets] can also be created to make the palette richer. +\n+Those are developped by professional developers, from scratch or from an https://community.bonitasoft.com/project[existing project] of the Community. +\n+\n+The following chapters give more information on how to develop all the others elements in the UI Designer.\n+\n [.card-section]\n == User interfaces elements and how to use them\n \n [.card.card-index]\n --\n-xref:ROOT:create-or-modify-a-page.adoc[[.card-title]#Create or modify UI elements# [.card-body.card-content-overflow]#pass:q[All UI elements and how they fit together]#]\n+xref:forms.adoc[[.card-title]#Forms# [.card-body.card-content-overflow]#pass:q[The user interfaces forms]#]\n --\n \n [.card.card-index]\n --\n-xref:forms.adoc[[.card-title]#Forms# [.card-body.card-content-overflow]#pass:q[The user interfaces closely tied to processes]#]\n+xref:pages.adoc[[.card-title]#Pages# [.card-body.card-content-overflow]#pass:q[The user interfaces pages]#]\n --\n \n [.card.card-index]\n --\n-xref:ROOT:forms-development.adoc[[.card-title]#Forms development# [.card-body.card-content-overflow]#pass:q[The technical insight for their creation]#]\n+xref:layouts.adoc[[.card-title]#Layouts# [.card-body.card-content-overflow]#pass:q[The user interfaces layouts]#]\n --\n \n [.card.card-index]\n --\n-xref:ROOT:pages.adoc[[.card-title]#Pages# [.card-body.card-content-overflow]#pass:q[The user interfaces composing Living Applications]#]\n+xref:variables.adoc[[.card-title]#Variables in the UI Designer# [.card-body.card-content-overflow]#pass:q[A means for both business data handling and UI dynamicity]#]\n --\n \n [.card.card-index]\n --\n-xref:ROOT:pages-development.adoc[[.card-title]#Pages development# [.card-body.card-content-overflow]#pass:q[The technical insight for their creation]#]\n+xref:widgets.adoc[[.card-title]#Widgets# [.card-body.card-content-overflow]#pass:q[The Bonita-provided UI bits and pieces]#]\n --\n \n [.card.card-index]\n --\n-xref:variables.adoc[[.card-title]#Variables in the UI Designer# [.card-body.card-content-overflow]#pass:q[A means for both business data handling and UI dynamicity]#]\n+xref:widget-properties.adoc[[.card-title]#Widget properties# [.card-body.card-content-overflow]#pass:q[How to make the best use out of widgets]#]\n --\n \n [.card.card-index]\n --\n-xref:ROOT:widgets.adoc[[.card-title]#Widgets# [.card-body.card-content-overflow]#pass:q[The Bonita-provided UI bits and pieces]#]\n+xref:repeat-a-container-for-a-collection-of-data.adoc[[.card-title]#Repeatable container# [.card-body.card-content-overflow]#pass:q[A very special property to create great lists]#]\n --\n \n [.card.card-index]\n --\n-xref:ROOT:widget-properties.adoc[[.card-title]#Widget properties# [.card-body.card-content-overflow]#pass:q[How to make the best use out of them]#]\n+xref:fragments.adoc[[.card-title]#Fragments# [.card-body.card-content-overflow]#pass:q[Groups of widgets saved together for reusability]#]\n --\n \n [.card.card-index]\n --\n-xref:ROOT:repeat-a-container-for-a-collection-of-data.adoc[[.card-title]#Repeatable container# [.card-body.card-content-overflow]#pass:q[A very special property to create great lists]#]\n+xref:assets.adoc[[.card-title]#Assets# [.card-body.card-content-overflow]#pass:q[Private resources of a page]#]\n --\n \n-[.card.card-index]\n---\n-xref:ROOT:fragments.adoc[[.card-title]#Fragments# [.card-body.card-content-overflow]#pass:q[Groups of widgets saved together for reusability]#]\n---\n+== Responsiveness\n \n-[.card.card-index]\n---\n-xref:ROOT:assets.adoc[[.card-title]#Assets# [.card-body.card-content-overflow]#pass:q[Private resources of a page]#]\n---\n+You can optimize the page or form design for a given device type by configuring xref:ROOT:widget-properties.adoc[device-specific values for the Width property] for widgets. Use the a device types bar in the Page editor to choose the target device type.\n+image:images/images-6_0/pb-resolution.png[Device type selection]\n+\n+== Modify an element\n+\n+After a form, page, layout, or fragment is created, you can update it by just clicking on the *_Pencil_* icon to open it in the editor. +\n+Update the element by deleting or dragging and dropping widgets, business objects or fragments from the palette to the whiteboard. +\n+Edit widget properties in the widget properties panel, create data, and bind them to the widgets.\n+\n+== Preview an element\n+\n+You can preview page, form and fragment rendering by clicking on the *_Preview_* button. Another browser window opens with the element as it will be displayed after deployment. If you update the page, form or fragment, the preview is automatically refreshed when you save. +\n+\n+You can display your page, layout, form or fragment with one of your theme application installed. +\n+\n+From the preview window, you can also expand the preview outside of current preview mechanism, with the *Expand Preview in new window* button. This allows you to set new URL parameters, play with dynamic browser sizing, and to reuse same url in another browser to see how your form or page behaves in your user default browser. +\n+\n+You can use the a device types bar on the preview screen to choose the target device type. +\n+The preview displays the element as it would be displayed on the selected type of device. +\n+\n+[#export]\n+\n+== Export an element\n+\n+You can export a page or a layout to deploy it in Bonita Admin Application as a custom page. +\n+You can export any element to import it into another UI Designer. +\n+\n+To export an element, click the *_Export_* button image:images/images-6_0/pb-export.png[Export button] on the Page editor or the UI Designer home page. A zip file is downloaded to your computer. It contains a Bonita custom page, which is also suitable for import into another UI Designer. +\n+\n+After export you can modify your page or layout code by directly editing the code located in _resources_ folder. Be aware that such a modification to the code will work when the page or layout is deployed in the Bonita Runtime, but it may be broken if you import the page into another UI Designer.\n+\n+To import elements in another Studio, you can export pages and forms in the process `.bos` file. In the list of elements to insert in the .bos file, forms are checked by default, but not pages. When you import this `.bos` file into another Bonita Studio, forms and pages that you have checked are available in the UI Designer of that Studio.\n+\n+[#import]\n+\n+== Import an element\n+\n+To import an element from another UI Designer, go to the UI Designer home page and click the *_Import_* button image:images/images-6_0/pb-import.png[Import button]. When you import a page, layout, form or fragment, its dependencies (such as custom widgets and fragments used) are automatically be imported too. +\n+\n+[WARNING]\n+====\n+An element that has not been designed with the UI Designer cannot be imported into the UI Designer.\n+====\n+\n+== Pages and forms in .bos/.bar file\n+\n+When you generate the `.bar` file of a process, the mapped forms created with the UI Designer are embedded in the file. +\n+Application pages are not embedded as they are independant from the process. +\n+When the .bar file is deployed, forms are deployed too. +\n+\n+Applications and its elements must be deployed onto the target environment. This can be done manually from the Super Administrator or Administrator applications, in the *_Applications_* and *_Resources_* menu options. It can also be done automatically through the automation of the project builds and deployment.\n+\n+For more information on Bonita Continuous Delivery tool (Subscription editions only], visit https://documentation.bonitasoft.com/bcd/latest/[the dedicated documentation page].\n \n \n [.card-section]"
  },
  {
    "sha": "f62945fd2a8bfc6930e0863e713352f03be99aca",
    "filename": "modules/pages-and-forms/pages/pages-development.adoc",
    "status": "removed",
    "additions": 0,
    "deletions": 121,
    "changes": 121,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2Fpages-and-forms%2Fpages%2Fpages-development.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/8f0c85b397a32ee6d16649e2fd211e6538706678/modules%2Fpages-and-forms%2Fpages%2Fpages-development.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Fpages-development.adoc?ref=8f0c85b397a32ee6d16649e2fd211e6538706678",
    "patch": "@@ -1,121 +0,0 @@\n-= Pages development\n-:page-aliases: ROOT:pages-development.adoc\n-:description: A page presents information to a user or can also collect information entered by a user.\n-\n-{description}\n-\n-Displayed in a browser, a xref:ROOT:pages.adoc[page] is intended for use in applications.\n-\n-== Provided pages\n-\n-You do not need to create all your pages from scratch. Bonita already provides some pages. +\n-Bonita Administrator Application \"Resources\" tab lists all the non-UI Designer-made pages, that can be reused \"as-is\" in an application.\n-By downloading the Bonita User and Administrator applications from Bonita Studio Welcome page, you also download Bonita pages created with Bonita UI Designer. +\n-Those pages can be customized and added to an application.\n-\n-== Custom pages\n-\n-A page resource has the general xref:ROOT:resource-management.adoc[resource definition].\n-If it contains an `Index.groovy` file, this must implement the PageController interface optionally with libraries.\n-If you create a custom page with Bonita UI Designer, its structure and content will be congruent by default.\n-\n-A custom page is displayed inside an iframe to prevent conflicts between resources (for example JS and CSS) and those used in the custom page.\n-This also reduces the risk of migration issues, for example if a custom page uses a version of JQuery that gets updated.\n-\n-=== PageController interface\n-\n-[source,java]\n-----\n-public interface PageController {\n-\n-/**\n-* Let the custom page parse request for specific attribute handling.\n-*\n-* @param request the HTTP servlet request intended to be used as in a servlet\n-* @param response the HTTP servlet response intended to be used as in a servlet\n-* @param pageResourceProvider provide access to the resources contained in the custom page zip\n-* @param pageContext provide access to the data relative to the context in which the custom page is displayed\n-*/\n-public void doGet(HttpServletRequest request, HttpServletResponse response, PageResourceProvider pageResourceProvider, PageContext pageContext);\n-}\n-----\n-\n-=== Permissions for custom pages\n-\n-If your custom page is an HTML page using the Web REST API,\n-you need to specify the xref:identity:rest-api-authorization.adoc[REST API authorizations] that a user needs to have in order to access the resources in the custom page.\n-These resource authorizations are defined in the `page.properties` file. If your custom page is written in Groovy and uses the Bonita Engine Java APIs, you do not need to specify any resource authorization.\n-\n-For each REST resource accessed in the page, specify the authorization needed for each method used. +\n-You can find examples of the default resources in xref:runtime:bonita-platform-setup.adoc[`resources-permissions-mapping.properties`].\n-\n-The following example shows the resource authorizations defined for a custom page that enables a user to view but not update organization information:\n-\n-----\n-#The name must start with 'custompage_'\n-name=custompage_orgViewer\n-displayName=Organization viewer\n-description=Organization viewer page. You cannot modify the organization from this page.\n-resources=[GET|identity/user, GET|identity/personalcontactdata, GET|identity/professionalcontactdata, GET|identity/role, GET|identity/group, GET|identity/membership, GET|customuserinfo/user, GET|customuserinfo/definition, GET|customuserinfo/value]\n-----\n-\n-When a user is given access to this page because they are in a profile that contains it or that is mapped to an application that contains the page, then this user is granted, upon login, the permissions associated to these resources (see xref:identity:rest-api-authorization.adoc[REST API authorizations] for more details).\n-\n-=== Debugging a custom page in development\n-\n-While you are developing a custom page, you can enable custom page debug mode. In debug mode, you can see changes to your custom page without importing a new .zip archive.\n-\n-To enable custom page debug mode, edit xref:runtime:bonita-platform-setup.adoc[`console-config.properties`] and set `custom.page.debug` to `true`.\n-\n-To work on a page in debug mode:\n-\n-[NOTE]\n-====\n-\n-On a Tomcat installation, `<java.io.tmpdir>` points to `<BUNDLE_HOME>/temp/`\n-====\n-\n-. Import your custom page zip archive into the Bonita Administrator Application. This creates a directory `<java.io.tmpdir>/bonita_portal_*/tenants/tenant_id/pages/custompage_<your custom page>`.\n-. Publish the page to a profile, then log out and log in as a user having this profile.\n-. You can now update `Index.groovy` and the contents of the `lib` directory directly in `<java.io.tmpdir>/bonita_portal_*/tenants/tenant_id/pages/custompage_<your custom page>`.\n-. To view the page after you modify it, refresh the page in the browser.\n-\n-When you have finished developing the page, recreate the custom page zip archive, and then modify the page to import it. This makes your final version of the page permanently available.\n-\n-[NOTE]\n-====\n-\n-In Bonita Studio, the debug mode is enabled by default. +\n-If you want to disable it, you need to use the setup tool provided in `workspace/tomcat/setup/` to update `console-config.properties` (Update the file database.properties first so it points to the target database. E.g.: h2.database.dir=../../default/h2_database).\n-====\n-\n-=== Constraints\n-\n-When you update to a newer version of Bonita, your custom page definition should still be valid.\n-However, this cannot be guaranteed for all future updates.\n-\n-=== Page resources management\n-\n-==== Page resources\n-\n-Custom page resources can be accessed by a `PageResourceProvider`.\n-\n-The `bonita.css` can be retrieved using `pageResourceProvider.getBonitaThemeCSSURL()`\n-\n-Other `css/js` resources can be retrieved using `pageResourceProvider.getResourceURL(\"<path in the custom page resources folder>\")`\n-\n-If you are not using Groovy you can directly access a resource by adding a link in `index.html`.\n-\n-For example: `<link href=\"css/file.css\" rel=\"stylesheet\" />`\n-\n-==== API access\n-\n-If your page is viewed in a custom profile or in an application, you will have access facilities for xref:ROOT:rest-api-overview.adoc[the REST API].\n-\n-you will be able to access any REST API using the following path: `../API/{API name}/{resource name}`\n-\n-==== Theme access\n-\n-If your page is viewed in an application, you will have access facilities for xref:runtime:applications.adoc[the application theme].\n-\n-The `Theme.css` is directly accessible by adding the following link in `index.html`: `<link href=\"../theme/theme.css\" rel=\"stylesheet\" />`"
  },
  {
    "sha": "66b6c1f404bab634744d0e6220a012aa71dc99f1",
    "filename": "modules/pages-and-forms/pages/pages.adoc",
    "status": "modified",
    "additions": 155,
    "deletions": 5,
    "changes": 160,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Fpages.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fpages-and-forms%2Fpages%2Fpages.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fpages-and-forms%2Fpages%2Fpages.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -1,15 +1,53 @@\n = Pages\n :page-aliases: ROOT:pages.adoc\n-:description: Pages are resources intended to be used in applications.\n+:description: Pages are resources intended to be used in applications. A page presents information to a user or can also collect information entered by a user.\n \n-{description}  They are xref:ROOT:resource-management.adoc[added, exported, edited, and deleted] as resources in the Bonita Administrator Application.\n+{description}\n+Displayed in a browser, a page is intended for use in applications.\n+They are xref:ROOT:resource-management.adoc[added, exported, edited, and deleted] as resources in the Bonita Administrator Application.\n \n-== Provided pages\n+\n+== Create a page\n+\n+Pages are created independently from the processes. They are used to display business information that group several processes and several instances of the processes in an efficient view, a list of requests, for example. +\n+The controls they embed (buttons, links) can call BPM APIs that will trigger the display of the process instantiation form, or the execution of a task.\n+\n+=== From scratch\n+. From Bonita Studio coolbar, click on the *_UI Designer_* icon to open the UI Designer. +\n+. Click on the *_Create_* button\n+. In the pop up, choose the element to create\n+. Give it a name\n+. Click on the *_Create_* button\n+. In the page editor, drag and drop the widgets, fragments, or BDM objects to create the right user interface\n+\n+=== From an existing page\n+You can easily duplicate an exiting page just by saving it under a different name.\n+\n+. From Bonita Studio coolbar, click on the *_UI Designer_* icon to open the UI Designer. +\n+. Open the page you want to duplicate\n+. Click on the *_Save_* button and select *_Save as_*\n+. In the pop up, choose the element to create (new page or form)\n+. Give it a name\n+. Click on the *_Save_* button\n+\n+=== From a Bonita provided page\n \n Bonita Runtime comes with some provided pages to use in applications. They are wrapped pages developed in other technologies than Bonita UI Designer (AngularJS, React). +\n Starting with Bonita 2021.1, you can also download Bonita User application and Bonita Administrator applications (from Bonita Studio Welcome page), and get more provided pages, developped with Bonita UI Designer. +\n Such UI Designer pages can be customized in the UI Designer, to better fit the needs of the end-users.\n \n+Only Bonita pages created with the UI Designer can be customized in the UI Designer. Indeed, as Bonita applications have evolved in several phases, so did the frameworks in which their pages have been made.\n+\n+To customize a page provided by Bonita:\n+\n+. From Bonita Studio coolbar, click on the *_Applications_* icon, and open the *_Administrator Application_*\n+. Go to the *_Resources_* menu, find the page, and and check its description to make sure it is a page done with Bonita UI Designer\n+. Export the page\n+. From Bonita Studio coolbar, click on the *_UI Designer_* icon to open Bonita UI Designer\n+. Import the page in the UI Designer\n+\n+Note that by doing so, if the page embed fragments and custom widgets, they are also imported and added to the UI Designer palette.\n+\n === List of Bonita Applications customizable pages\n \n ==== Bonita User Application\n@@ -52,8 +90,6 @@ A few examples of custom pages:\n * Provide an administrator with a multi-attribute search facility.\n * Integrate a page from an external application.\n \n-For all information about developping a custom page, visit xref:ROOT:pages-development.adoc[the dedicated documentation page].\n-\n == Use in applications\n \n Once the pages are all made available in the Resources tab of Bonita Administrator Application, they can be used to xref:applications:application-creation.adoc[create applications]. +\n@@ -70,3 +106,117 @@ You can xref:ROOT:resource-management.adoc#modify[edit the content of a page] by\n === Modify the pages in an application\n \n You can modify the pages in an application by xref:runtime:applications.adoc#specify-pages[mapping other pages] in the application descriptor, and/or xref:runtime:applications.adoc#define-navigation[creating, moving, or deleting menus or menu options].\n+\n+== Provided pages\n+\n+You do not need to create all your pages from scratch. Bonita already provides some pages. +\n+Bonita Administrator Application \"Resources\" tab lists all the non-UI Designer-made pages, that can be reused \"as-is\" in an application.\n+By downloading the Bonita User and Administrator applications from Bonita Studio Welcome page, you also download Bonita pages created with Bonita UI Designer. +\n+Those pages can be customized and added to an application.\n+\n+== Custom pages\n+\n+A page resource has the general xref:ROOT:resource-management.adoc[resource definition].\n+If it contains an `Index.groovy` file, this must implement the PageController interface optionally with libraries.\n+If you create a custom page with Bonita UI Designer, its structure and content will be congruent by default.\n+\n+A custom page is displayed inside an iframe to prevent conflicts between resources (for example JS and CSS) and those used in the custom page.\n+This also reduces the risk of migration issues, for example if a custom page uses a version of JQuery that gets updated.\n+\n+=== PageController interface\n+\n+[source,java]\n+----\n+public interface PageController {\n+\n+/**\n+* Let the custom page parse request for specific attribute handling.\n+*\n+* @param request the HTTP servlet request intended to be used as in a servlet\n+* @param response the HTTP servlet response intended to be used as in a servlet\n+* @param pageResourceProvider provide access to the resources contained in the custom page zip\n+* @param pageContext provide access to the data relative to the context in which the custom page is displayed\n+*/\n+public void doGet(HttpServletRequest request, HttpServletResponse response, PageResourceProvider pageResourceProvider, PageContext pageContext);\n+}\n+----\n+\n+=== Permissions for custom pages\n+\n+If your custom page is an HTML page using the Web REST API,\n+you need to specify the xref:identity:rest-api-authorization.adoc[REST API authorizations] that a user needs to have in order to access the resources in the custom page.\n+These resource authorizations are defined in the `page.properties` file. If your custom page is written in Groovy and uses the Bonita Engine Java APIs, you do not need to specify any resource authorization.\n+\n+For each REST resource accessed in the page, specify the authorization needed for each method used. +\n+You can find examples of the default resources in xref:runtime:bonita-platform-setup.adoc[`resources-permissions-mapping.properties`].\n+\n+The following example shows the resource authorizations defined for a custom page that enables a user to view but not update organization information:\n+\n+----\n+#The name must start with 'custompage_'\n+name=custompage_orgViewer\n+displayName=Organization viewer\n+description=Organization viewer page. You cannot modify the organization from this page.\n+resources=[GET|identity/user, GET|identity/personalcontactdata, GET|identity/professionalcontactdata, GET|identity/role, GET|identity/group, GET|identity/membership, GET|customuserinfo/user, GET|customuserinfo/definition, GET|customuserinfo/value]\n+----\n+\n+When a user is given access to this page because they are in a profile that contains it or that is mapped to an application that contains the page, then this user is granted, upon login, the permissions associated to these resources (see xref:identity:rest-api-authorization.adoc[REST API authorizations] for more details).\n+\n+=== Debugging a custom page in development\n+\n+While you are developing a custom page, you can enable custom page debug mode. In debug mode, you can see changes to your custom page without importing a new .zip archive.\n+\n+To enable custom page debug mode, edit xref:runtime:bonita-platform-setup.adoc[`console-config.properties`] and set `custom.page.debug` to `true`.\n+\n+To work on a page in debug mode:\n+\n+[NOTE]\n+====\n+\n+On a Tomcat installation, `<java.io.tmpdir>` points to `<BUNDLE_HOME>/temp/`\n+====\n+\n+. Import your custom page zip archive into the Bonita Administrator Application. This creates a directory `<java.io.tmpdir>/bonita_portal_*/tenants/tenant_id/pages/custompage_<your custom page>`.\n+. Publish the page to a profile, then log out and log in as a user having this profile.\n+. You can now update `Index.groovy` and the contents of the `lib` directory directly in `<java.io.tmpdir>/bonita_portal_*/tenants/tenant_id/pages/custompage_<your custom page>`.\n+. To view the page after you modify it, refresh the page in the browser.\n+\n+When you have finished developing the page, recreate the custom page zip archive, and then modify the page to import it. This makes your final version of the page permanently available.\n+\n+[NOTE]\n+====\n+\n+In Bonita Studio, the debug mode is enabled by default. +\n+If you want to disable it, you need to use the setup tool provided in `workspace/tomcat/setup/` to update `console-config.properties` (Update the file database.properties first so it points to the target database. E.g.: h2.database.dir=../../default/h2_database).\n+====\n+\n+=== Constraints\n+\n+When you update to a newer version of Bonita, your custom page definition should still be valid.\n+However, this cannot be guaranteed for all future updates.\n+\n+=== Page resources management\n+\n+==== Page resources\n+\n+Custom page resources can be accessed by a `PageResourceProvider`.\n+\n+The `bonita.css` can be retrieved using `pageResourceProvider.getBonitaThemeCSSURL()`\n+\n+Other `css/js` resources can be retrieved using `pageResourceProvider.getResourceURL(\"<path in the custom page resources folder>\")`\n+\n+If you are not using Groovy you can directly access a resource by adding a link in `index.html`.\n+\n+For example: `<link href=\"css/file.css\" rel=\"stylesheet\" />`\n+\n+==== API access\n+\n+If your page is viewed in a custom profile or in an application, you will have access facilities for xref:ROOT:rest-api-overview.adoc[the REST API].\n+\n+you will be able to access any REST API using the following path: `../API/{API name}/{resource name}`\n+\n+==== Theme access\n+\n+If your page is viewed in an application, you will have access facilities for xref:runtime:applications.adoc[the application theme].\n+\n+The `Theme.css` is directly accessible by adding the following link in `index.html`: `<link href=\"../theme/theme.css\" rel=\"stylesheet\" />`"
  },
  {
    "sha": "619d1e6d092fe5930ca37ec1accbd96a186f9642",
    "filename": "modules/runtime/pages/applications.adoc",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fruntime%2Fpages%2Fapplications.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fruntime%2Fpages%2Fapplications.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fruntime%2Fpages%2Fapplications.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -13,12 +13,12 @@ image:images/UI2021.1/admin_applications.png[Administrator Applications]\n Bonita allows companies to build business and process-centered web applications that provide access to operational dashboards and pages. +\n An application is a collection of pages and processes that meets a business need. It contains some or all of the following:\n \n-* xref:ROOT:pages.adoc[Pages] and xref:pages-and-forms:forms.adoc[Forms]: the user interface components of the application. An application must contain at least one page.\n+* xref:pages-and-forms:pages.adoc[Pages] and xref:pages-and-forms:forms.adoc[Forms]: the user interface components of the application. An application must contain at least one page.\n * xref:admin-application-process-list.adoc[Processes]: the logic execution components of the application. An application must contain at least one process. A process can contain xref:pages-and-forms:forms.adoc[forms], which are the user interface of the process.\n * xref:ROOT:data-handling-overview.adoc[Data]: the business information created, transformed, and/or deleted by the processes, and presented in pages and forms.\n * xref:api:rest-api-extensions.adoc[REST API extensions]: called from pages or forms to retrieve data to be presented to the user.\n-* xref:ROOT:layouts.adoc[Layout]: the frame in which application pages are displayed.\n-* xref:ROOT:themes.adoc[Theme]: the appearance of application pages, including fonts and colors.\n+* xref:applications:layout-development.adoc[Layout]: the frame in which application pages are displayed.\n+* xref:applications:themes.adoc[Theme]: the appearance of application pages, including fonts and colors.\n \n == Application prerequisites\n \n@@ -75,7 +75,7 @@ To map new resources, you need to make sure that they have been installed first.\n \n ==== Updating the layout\n \n-Each application is associated with a xref:ROOT:layouts.adoc[layout] that defines the main frame of this application.\n+Each application is associated with a xref:applications:layout-development.adoc[layout] that defines the main frame of this application.\n To change the application layout:\n \n . Click on the _Edit_ icon for the application you want to edit. The application details page is displayed.\n@@ -87,7 +87,7 @@ To change the application layout:\n \n ==== Updating the theme\n \n-Each application is associated with a xref:ROOT:themes.adoc[theme] that defines the application appearance. All pages developed with the xref:bonita-overview:ui-designer-overview.adoc[UI Designer] will automatically benefit of application theme.\n+Each application is associated with a xref:applications:themes.adoc[theme] that defines the application appearance. All pages developed with the xref:bonita-overview:ui-designer-overview.adoc[UI Designer] will automatically benefit of application theme.\n \n To update the application theme:\n "
  },
  {
    "sha": "5083013b77b6c6d5429bd5de7ec979e051c92a41",
    "filename": "modules/security/pages/csrf-security.adoc",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/bonitasoft/bonita-doc/blob/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fsecurity%2Fpages%2Fcsrf-security.adoc",
    "raw_url": "https://github.com/bonitasoft/bonita-doc/raw/7af986317cd53dafae3faa138cc45543c5bea51f/modules%2Fsecurity%2Fpages%2Fcsrf-security.adoc",
    "contents_url": "https://api.github.com/repos/bonitasoft/bonita-doc/contents/modules%2Fsecurity%2Fpages%2Fcsrf-security.adoc?ref=7af986317cd53dafae3faa138cc45543c5bea51f",
    "patch": "@@ -75,8 +75,8 @@ To use a UI page or form that was created in lower version than 7.4, you need to\n Follow this few steps to update your page or form:\n \n In UI designer:\n-1) xref:ROOT:create-or-modify-a-page.adoc#import[*Import*] the page from 7.3.X or lower version.\n-1) xref:ROOT:create-or-modify-a-page.adoc#export[*Export*] the page you previously imported.\n+1) xref:ROOT:pages-and-forms.adoc#import[*Import*] the page from 7.3.X or lower version.\n+1) xref:ROOT:pages-and-forms.adoc#export[*Export*] the page you previously imported.\n \n In the Bonita Administrator Application:\n 1) Go on Resources entry."
  }
]